// Place your key bindings in this file to overwrite the defaults
[
	{
		"key": "ctrl+r",
		"command": "workbench.action.gotoSymbol"
	},
	{
		"key": "ctrl+shift+o",
		"command": "-workbench.action.gotoSymbol"
	},
	{
		"key": "ctrl+shift+d",
		"command": "editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+alt+down",
		"command": "-editor.action.copyLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+,",
		"command": "editor.emmet.action.balanceOut"
	},
	{
		"key": "shift+alt+j",
		"command": "editor.emmet.action.matchTag"
	},
	{
		"key": "ctrl+.",
		"command": "editor.emmet.action.wrapWithAbbreviation"
	},
	{
		"key": "shift+alt+r",
		"command": "editor.emmet.action.removeTag"
	},
	{
		"key": "ctrl+alt+u",
		"command": "editor.emmet.action.updateTag"
	},
	{
		"key": "ctrl+shift+o",
		"command": "projectManager.listProjects"
	},
	{
		"key": "shift+alt+p",
		"command": "-projectManager.listProjects"
	},
	{
		"key": "shift+alt+t",
		"command": "workbench.action.tasks.runTask"
	},
	{
		"key": "numpad_add",
		"command": "editor.emmet.action.incrementNumberByOne"
	},
	{
		"key": "numpad_subtract",
		"command": "editor.emmet.action.decrementNumberByOne"
	},
	{
		"key": "shift+numpad_subtract",
		"command": "editor.emmet.action.decrementNumberByOneTenth"
	},
	{
		"key": "shift+numpad_add",
		"command": "editor.emmet.action.incrementNumberByOneTenth"
	},
	{
		"key": "ctrl+shift+down",
		"command": "editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+down",
		"command": "-editor.action.moveLinesDownAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+up",
		"command": "editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "alt+up",
		"command": "-editor.action.moveLinesUpAction",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+'",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+`",
		"command": "-workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+shift+/",
		"command": "editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "ctrl+shift+a",
		"command": "-editor.action.blockComment",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		"key": "shift+alt+v u",
		"command": "vagrant.up"
	},
	{
		"key": "shift+alt+v h",
		"command": "vagrant.halt"
	},
	{
		"key": "shift+alt+h",
		"command": "HookyQR.beautify"
	},
	{
		"key": "shift+alt+h",
		"command": "HookyQR.beautifyFile"
	},
	{
		"key": "shift+alt+c",
		"command": "csscomb.execute"
	},
	{
		"key": "ctrl+numpad_subtract",
		"command": "editor.emmet.action.decrementNumberByTen"
	},
	{
		"key": "ctrl+numpad_add",
		"command": "editor.emmet.action.incrementNumberByTen"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-multiclip.paste",
		"when": "editorTextFocus && editorLangId != 'markdown'"
	},
	{
		"key": "ctrl+shift+v",
		"command": "multiclip.list",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+alt+v",
		"command": "-multiclip.list",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "-multiclip.copyMerge",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+c",
		"command": "multiclip.copy",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+c",
		"command": "-multiclip.copy",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+x",
		"command": "-multiclip.cut",
		"when": "editorTextFocus"
	},
	{
		"key": "shift+alt+m",
		"command": "editor.emmet.action.mergeLines"
	},
	{
		"key": "shift+alt+'",
		"command": "extension.switchQuotes"
	},
	{
		"key": "ctrl+k shift+;",
		"command": "-extension.switchQuotes"
	},
	{
		"key": "f9",
		"command": "code-runner.run"
	},
	{
		"key": "ctrl+alt+n",
		"command": "-code-runner.run"
	},
	{
		"key": "ctrl+shift+.",
		"command": "editor.emmet.action.selectNextItem"
	},
	{
		"key": "ctrl+shift+,",
		"command": "editor.emmet.action.selectPrevItem"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-workbench.action.terminal.paste",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+shift+v",
		"command": "-markdown.showPreview",
		"when": "editorLangId == 'markdown'"
	},
	{
		"key": "ctrl+shift+x",
		"command": "-multiclip.cutMerge",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+v",
		"command": "-multiclip.regularPaste",
		"when": "editorTextFocus"
	},
	{
		"key": "ctrl+shift+x",
		"command": "multiclip.clearBuffer"
	},
	{
		"key": "shift+alt+'",
		"command": "editor.togglequotes"
	},
	{
		"key": "ctrl+'",
		"command": "-editor.togglequotes"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "ctrl+k ctrl+q",
		"command": "-workbench.action.navigateToLastEditLocation"
	},
	{
		"key": "alt+s shift+'",
		"command": "extension.selectDoubleQuote",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+'",
		"command": "-extension.selectDoubleQuote",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+d",
		"command": "-extension.downloadSettings"
	},
	{
		"key": "alt+s '",
		"command": "extension.selectSingleQuote",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k '",
		"command": "-extension.selectSingleQuote",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+,",
		"command": "extension.selectAngleBrackets",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k [IntlBackslash]",
		"command": "-extension.selectAngleBrackets",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+,",
		"command": "-extension.selectAngleBrackets",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+.",
		"command": "extension.selectBackTick",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k `",
		"command": "-extension.selectBackTick",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+[",
		"command": "extension.selectCurlyBrackets",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+[",
		"command": "-extension.selectCurlyBrackets",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+]",
		"command": "extension.selectCurlyBracketsOuter",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+]",
		"command": "-extension.selectCurlyBracketsOuter",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+d",
		"command": "extension.selectEitherQuote",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ;",
		"command": "-extension.selectEitherQuote",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+9",
		"command": "extension.selectParenthesis",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+9",
		"command": "-extension.selectParenthesis",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+0",
		"command": "extension.selectParenthesisOuter",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+0",
		"command": "-extension.selectParenthesisOuter",
		"when": "editorFocus"
	},
	{
		"key": "alt+s [",
		"command": "extension.selectSquareBrackets",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k [",
		"command": "-extension.selectSquareBrackets",
		"when": "editorFocus"
	},
	{
		"key": "alt+s ]",
		"command": "extension.selectSquareBracketsOuter",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k ]",
		"command": "-extension.selectSquareBracketsOuter",
		"when": "editorFocus"
	},
	{
		"key": "alt+s shift+.",
		"command": "extension.selectInTag",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+[IntlBackslash]",
		"command": "-extension.selectInTag",
		"when": "editorFocus"
	},
	{
		"key": "ctrl+k shift+.",
		"command": "-extension.selectInTag",
		"when": "editorFocus"
	},
	{
		"key": "shift+alt+a",
		"command": "wwm.aligncode"
	},
	{
		"key": "ctrl+alt+j",
		"command": "editor.action.joinLines"
	},
	{
		"key": "shift+alt+\\",
		"command": "extension.turndown"
	},
	{
		"key": "shift+alt+l",
		"command": "editor.action.transformToLowercase"
	},
	{
		"key": "shift+alt+u",
		"command": "-extension.updateSettings"
	},
	{
		"key": "shift+alt+u",
		"command": "editor.action.transformToUppercase"
	},
	{
		"key": "ctrl+shift+alt+1",
		"command": "editor.action.inspectTMScopes"
	},
	{
		"key": "ctrl+alt+\\",
		"command": "macros.MarkdownLinkSelect"
	},
	{
		"key": "ctrl+,",
		"command": "-workbench.action.openSettings"
	},
	{
		"key": "ctrl+alt+g",
		"command": "git.viewHistory"
	},
	{
		"key": "f3",
		"command": "findWordAtCursor.next"
	},
	{
		"key": "shift+f3",
		"command": "findWordAtCursor.previous"
	}
]